#
# functions-net.conf - DevOpsBroker configuration file for network-related functions
#
# Copyright (C) 2019 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 18.04.2 LTS running kernel.osrelease = 4.18.0-25
#
# The following functions have been defined within this configuration file:
#   o isExecutable(fileName)
#   o isValidDirectory(scriptName, dirName)
#   o isValidFile(scriptName, fileName)
# -----------------------------------------------------------------------------
#

############################ Environment Variables ############################

# Export all of the following variables
set -a

# Indicates this configuration file has already been loaded
FUNC_NET_CONFIG=true

# Export variables complete
set +a

################################## Functions ##################################

# ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
# Function:     getDefaultNIC
# Description:  Returns the default network interface
# -----------------------------------------------------------------------------
function getDefaultNIC() {
	set +o errexit
	mapfile -t ethList < <($EXEC_IP -br -4 addr show | $EXEC_GREP -Eo '^e[a-z0-9]+')
	set -o errexit

	if [ ${#ethList[@]} -eq 1 ]; then
		DEFAULT_NIC=(${ethList[0]})
	else
		local validNIC='false'
		COLUMNS=1

		echo "${bold}${yellow}Which Ethernet interface do you want to configure?${white}"
		select DEFAULT_NIC in ${ethList[@]}; do
			for nic in ${ethList[@]}; do
				echo $nic $DEFAULT_NIC
				if [ "$nic" == "$DEFAULT_NIC" ]; then
					validNIC='true'
					break;
				fi
			done

			if [ "$validNIC" == 'true' ]; then
				break;
			fi
		done
	fi

	echo "$DEFAULT_NIC"
}

## Export functions to shell
export -f getDefaultNIC
